@page "/Games/1"
@inject GameDbService service
@inject ReviewDbService reviewService
@using BlazorApp.Shared

@code 
{
    List<Game> Games = new List<Game>();
    
    List<Review> Reviews = new List<Review>();
    Game game = new Game();

    Review newReview = new Review();

    public int Stars{get;set;} = 0;
    public int Rating = 0;
    public float Average{get;set;} = 0;
    public float NumberOfReviews{get;set;} = 0;
    public int NumOfReviewsForGame{get;set;} = 0;
    public float num1Stars{get;set;} = 0;
    public float num2Stars{get;set;} = 0;
    public float num3Stars{get;set;} = 0;
    public float num4Stars{get;set;} = 0;
    public float num5Stars{get;set;} = 0;
    public float width1{get;set;}
    public float width2{get;set;}
    public float width3{get;set;}
    public float width4{get;set;}
    public float width5{get;set;}
    protected override async Task OnInitializedAsync()
    {
        await RefreshGames();
        await RefreshReviews();
    }

    private async Task RefreshGames()
    {
        Games = await service.GetGames(); 
        game = Games.Where(x => x.ID == 1).FirstOrDefault();
    }

    private async Task RefreshReviews()
    {
        Reviews = await reviewService.GetReviews(); 
    }
    
    public void calculateStats() {
      if(NumOfReviewsForGame > 0)
      {

        width1 = ((num1Stars/NumberOfReviews)*100.0f);
        width2 = ((num2Stars/NumberOfReviews)*100.0f);
        width3 = ((num3Stars/NumberOfReviews)*100.0f);
        width4 = ((num4Stars/NumberOfReviews)*100.0f);
        width5 = ((num5Stars/NumberOfReviews)*100.0f);
        Average = (((num5Stars*5) + (num4Stars*4) + (num3Stars*3) + (num2Stars*2)+(num1Stars*1) )/ NumberOfReviews);

        if (Average > 1){
            if (Average > 2){
                if (Average > 3){
                    if (Average > 4){
                        Rating=5;
                    }
                    else{
                        Rating=4;
                    }
                }
                else{
                    Rating=3;
                }
            }
            else{
                Rating=2;
            }
        }
        else{
            Rating=1;
        }
     }
     else {
       Average = 0.0f;
       width1 = 0;
       width2 = 0;
       width3 = 0;
       width4 = 0;
       width5 = 0;
     }
   }
}

@foreach (var review in Reviews)
{
  if(review.GameID == 1)
    {
      NumOfReviewsForGame++;
      if(review.Stars == 1){
        num1Stars++;
      }else if(review.Stars == 2){
          num2Stars++;
      }else if(review.Stars == 3){
        num3Stars++;
      }else if(review.Stars == 4){
        num4Stars++;
      }else if(review.Stars == 5){
        num5Stars++;
      }
      Stars += review.Stars;
      NumberOfReviews++;
    }
}

@for (int i = 0; i < 1; i++)
{
    calculateStats();
}


<GameDetail Game="game" InCart="false" InWishList="false"></GameDetail>
<br>
<div class="review-border">
<span class="heading">User Rating</span>
@for(int i = 1; i <= 5; i++)
{
    if(i <= Rating)
    {
        <span class="fa fa-star checked"></span>
    }
    else
    {
        <span class="fa fa-star"></span>
    }
}
<p>@String.Format("{0:0.00}",Average) average based on @NumberOfReviews reviews.</p>
<hr style="border:3px solid #f1f1f1">

<div class="row">
  <div class="side">
    <div style="padding-left:30px;">5 star</div>
  </div>
  <div class="middle">
    <div class="bar-container">
      <div class="bar-5"></div>
    </div>
  </div>
  <div class="side right">
    <div>@num5Stars</div>
  </div>
  <div class="side">
    <div style="padding-left:30px;">4 star</div>
  </div>
  <div class="middle">
    <div class="bar-container">
      <div class="bar-4"></div>
    </div>
  </div>
  <div class="side right">
    <div>@num4Stars</div>
  </div>
  <div class="side">
    <div style="padding-left:30px;">3 star</div>
  </div>
  <div class="middle">
    <div class="bar-container">
      <div class="bar-3"></div>
    </div>
  </div>
  <div class="side right">
    <div>@num3Stars</div>
  </div>
  <div class="side">
    <div style="padding-left:30px;">2 star</div>
  </div>
  <div class="middle">
    <div class="bar-container">
      <div class="bar-2"></div>
    </div>
  </div>
  <div class="side right">
    <div>@num2Stars</div>
  </div>
  <div class="side">
    <div style="padding-left:30px;">1 star</div>
  </div>
  <div class="middle">
    <div class="bar-container">
      <div class="bar-1"></div>
    </div>
  </div>
  <div class="side right">
    <div>@num1Stars</div>
  </div>
</div>
</div>

<br>
@if(@NumOfReviewsForGame < 1){
  <h3 style="text-align:left">No Reviews Yet</h3>
}
else{
  <h3 style="text-align:left">Reviews</h3>
}
<hr style="border:1px solid #f1f1f1">
@foreach (var review in Reviews)
{
    if(review.GameID == 1)
    {
        <ReviewDetail Review="review"></ReviewDetail>
    }
    
}

<ReviewSubmission NewReview="newReview" GameID="1"></ReviewSubmission>

<style>
  * {
  box-sizing: border-box;
}

.heading {
  font-size: 25px;
  margin-right: 25px;
}

.fa {
  font-size: 25px;
}

.checked {
  color: orange;
}

/* Three column layout */
.side {
  float: left;
  width: 15%;
  margin-top: 10px;
}

.middle {
  float: left;
  width: 70%;
  margin-top: 10px;
}

/* Place text to the right */
.right {
  text-align: right;
  padding-right: 30px;
}

/* Clear floats after the columns */
.row:after {
  content: "";
  display: table;
  clear: both;
}

/* The bar container */
.bar-container {
  width: 100%;
  background-color: #f1f1f1;
  text-align: center;
  color: white;
}

/* Individual bars */
.bar-5 {width: @width5%; height: 18px; background-color: #04AA6D;}
.bar-4 {width: @width4%; height: 18px; background-color: #2196F3;}
.bar-3 {width: @width3%; height: 18px; background-color: #00bcd4;}
.bar-2 {width: @width2%; height: 18px; background-color: #ff9800;}
.bar-1 {width: @width1%; height: 18px; background-color: #f44336;}

.review-border{
  border:groove;
  border-width: 5px;
  border-radius: 5px;
  padding: 25px;
  border-color: #f1f1f1;
}
</style>